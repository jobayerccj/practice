openapi: 3.0.3
info:
  title: An api to learn design pattern
  description: |-
    This is a sample project

  contact:
    email: jobayercse@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1

tags:
  - name: rest api, design pattern
    
paths:
  /api/login_check:
    post:
      summary: Authenticate user and collect bearer token
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
                password:
                  type: string
                  example: "123456"
                  
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
              
  /api/posts:
    post:
      summary: Add a new post
      description: Add a new blog post
      
      requestBody:
        description: Create a new blog post
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostResponse"
            
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - bearer_auth: []
        
  /api/comments:
    post:
      summary: Add comment in any post
      description: Add a new blog post
      
      requestBody:
        description: Create a new blog post
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse' 
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - bearer_auth: []
  
components:
  schemas:
    Post:
      required:
        - title
        - description
        - createdBy
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        title:
          type: string
          example: my first post
        description:
          type: string
          example: details about my first post
        createdBy:
          type: integer
          example: 65
        createdAt:
          type: string
          format: date-time
          description: 2024-07-25 12:47:09
        updatedAt:
          type: string
          format: date-time
          description: 2024-07-27 12:47:09
    
    Comment:
      type: object
      required:
        - description
        - commentedOn
        - commentedBy
      properties:
        id:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: comment for post1
        commentedOn:
          type: integer
          example: 32
        commentedBy:
          type: integer
          example: 25
        createdAt:
          type: string
          format: date-time
          description: 2024-07-25 12:47:09
        updatedAt:
          type: string
          format: date-time
          description: 2024-07-27 12:47:09
          
    LoginResponse:
      type: "object"
      properties:
        token:
          type: "string"
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        roles:
          type: "array"
          items:
            type: string
            enum:
              - "ROLE_USER"
              - "ROLE_ADMIN"
              
    PostResponse:
      type: "object"
      properties:
        status:
          type: "string"
          example: "ok"
        data:
          type: "object"
          properties:
            postId:
              type: "integer"
              format: "int64"
              example: 1
              
    CommentResponse:
      type: "object"
      properties:
        status:
          type: "string"
          example: "ok"
        data:
          type: "object"
          properties:
            commentId:
              type: "integer"
              format: "int64"
              example: 3
  
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
